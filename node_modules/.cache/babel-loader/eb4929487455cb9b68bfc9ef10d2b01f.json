{"ast":null,"code":"var _jsxFileName = \"/Users/jenniferbouhid/Desktop/test-datepicker-sur-npm/datepicker/src/lib/components/DatePicker.jsx\",\n  _s = $RefreshSig$();\nimport { React, useState } from \"react\";\nimport Calendar from 'react-calendar';\nimport \"react-calendar/dist/Calendar.css\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CalendarWrapper = styled.div`\n    position: absolute;\n    margin: 20px;\n    transform: translate3d(-28px, 0px, 0px);\n`;\n\n/**\n * Component datapicker\n */\n_c = CalendarWrapper;\nexport default function DatePicker(props) {\n  _s();\n  const [date, setDate] = useState(new Date());\n  const [dateInput, setDateInput] = useState();\n  const [openCalendar, setOpenCalendar] = useState(false);\n  const [changeInput, setChangeInput] = useState(false);\n  const dateInputString = new Date();\n  const todaysDateInNumbers = date.toLocaleDateString();\n  if (dateInput) {\n    const words = dateInput.split('/');\n    const day = words[0];\n    const month = words[1];\n    const year = words[2];\n    dateInputString.setDate(day);\n    dateInputString.setMonth(month - 1);\n    dateInputString.setFullYear(year);\n  }\n  const onChange = date => {\n    setDate(date);\n    setOpenCalendar(false);\n    setChangeInput(false);\n    props.onChange(date.toLocaleDateString());\n  };\n  const handleChange = e => {\n    setDateInput(e.target.value);\n    setChangeInput(true);\n    if (e.target.value.length === 10) {\n      setOpenCalendar(false);\n      props.onChange(e.target.value);\n    }\n  };\n  const handleClick = () => {\n    setOpenCalendar(true);\n  };\n  const inputValue = dateInput && changeInput ? dateInput : todaysDateInNumbers;\n  const calendarValue = dateInput && !dateInput.length < 10 && changeInput ? dateInputString : date;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: props.class,\n      id: props.id,\n      value: inputValue,\n      type: \"text\",\n      onClick: handleClick,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), openCalendar ? /*#__PURE__*/_jsxDEV(CalendarWrapper, {\n      children: /*#__PURE__*/_jsxDEV(Calendar, {\n        onChange: onChange,\n        value: calendarValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n_s(DatePicker, \"joc7CMRj4an0TxB09d6IFcV/O+s=\");\n_c2 = DatePicker;\nvar _c, _c2;\n$RefreshReg$(_c, \"CalendarWrapper\");\n$RefreshReg$(_c2, \"DatePicker\");","map":{"version":3,"names":["React","useState","Calendar","styled","CalendarWrapper","div","DatePicker","props","date","setDate","Date","dateInput","setDateInput","openCalendar","setOpenCalendar","changeInput","setChangeInput","dateInputString","todaysDateInNumbers","toLocaleDateString","words","split","day","month","year","setMonth","setFullYear","onChange","handleChange","e","target","value","length","handleClick","inputValue","calendarValue","class","id"],"sources":["/Users/jenniferbouhid/Desktop/test-datepicker-sur-npm/datepicker/src/lib/components/DatePicker.jsx"],"sourcesContent":["import { React, useState } from \"react\";\n\nimport Calendar from 'react-calendar';\nimport \"react-calendar/dist/Calendar.css\";\nimport styled from \"styled-components\";\n\nconst CalendarWrapper = styled.div`\n    position: absolute;\n    margin: 20px;\n    transform: translate3d(-28px, 0px, 0px);\n`;\n\n/**\n * Component datapicker\n */\nexport default function DatePicker(props) {\n    \n    const [date, setDate] = useState(new Date());\n    const [dateInput, setDateInput] = useState();\n    const [openCalendar, setOpenCalendar]= useState(false);\n    const [changeInput, setChangeInput]= useState(false);\n    const dateInputString = new Date();\n    const todaysDateInNumbers = date.toLocaleDateString();\n\n    if (dateInput){\n        const words = dateInput.split('/');\n        const day = words[0];\n        const month = words[1];\n        const year = words[2];\n        dateInputString.setDate(day);\n        dateInputString.setMonth(month-1);\n        dateInputString.setFullYear(year);\n    }\n\n    const onChange = date => {\n        setDate(date);\n        setOpenCalendar(false);\n        setChangeInput(false);\n        props.onChange(date.toLocaleDateString());\n        \n    }\n\n    const handleChange = (e) => {\n        setDateInput(e.target.value);\n        setChangeInput(true);\n        if(e.target.value.length === 10){\n            setOpenCalendar(false);\n            props.onChange(e.target.value);\n        }\n    }\n    \n    const handleClick = () =>{\n        setOpenCalendar(true);\n    }\n    const inputValue = dateInput && changeInput ? dateInput : todaysDateInNumbers;\n    const calendarValue = dateInput && !dateInput.length < 10 && changeInput ? dateInputString : date;\n\n    return (\n        <div>\n            <input \n                className={props.class}\n                id={props.id}\n                value={inputValue} \n                type=\"text\"\n                onClick={handleClick}\n                onChange={handleChange}\n            />\n            \n            {openCalendar ? (\n                <CalendarWrapper >\n                    <Calendar \n                    onChange={onChange} \n                    value={calendarValue}\n                    />\n                </CalendarWrapper>\n                    \n            ): null}\n        </div>\n    )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}